.cortar{
  text-decoration: var(--taxado);
}



span:first-child {
    display: none;

}

span{
    display: flex;
    flex-wrap: wrap;
}

.todo{
    width: 736px;
    border-radius: 8px;
    margin-top: 1.5rem;
    background: var(--grey-400);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    padding-bottom: 1rem;
    padding-left:1rem;
    padding-right: 1rem;   
    
}

p{
    width: 100%;
    min-height: 16px;
    display: flex;
    flex-direction: row;
    color: var(--grey-100);
    justify-content: space-between;
    align-items: flex-start;
    flex-wrap: wrap;
    text-align: justify;
    padding: 0 1rem 0 1rem;
    
}

.taskfinish p{
  text-decoration: line-through;
}

.todolist{
    margin-top: 2rem;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 64px 24px;
    gap: 16px;
    width: 736px;
    height: 244px;
    border-top: 1px solid var(--grey-400);
    border-radius: 8px;
    flex: none;
    order: 1;
    align-self: stretch;
    flex-grow: 0;
    
}

.todoempty{
    width: 688px;
    font-family: 'Inter';
    font-style: normal;
    font-weight: 700;
    font-size: 16px;
    line-height: 140%;
    text-align: center;
    color: var(--grey-300);
    flex: none;
    order: 1;
    align-self: stretch;
    flex-grow: 0;
}

.todoempty_2{
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400;
    font-size: 16px;
    text-align: center;
    color: var(--grey-300);
    flex: none;
    order: 1;
    align-self: stretch;
    flex-grow: 0;
    }

    
/* The container */
.container {
    display: flex;
    padding-left: 0px;
    margin-bottom: 6px;
    cursor: pointer;
    justify-content: center;
    flex-direction: column;
    padding-left: 0px;
    
  }
  
  /* Hide the browser's default checkbox */
  .container input {
   
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  
    
  }
  
  /* Create a custom checkbox */
  .checkmark {
    
    
    height: 17.45px;
    width: 17.45px;
    border-radius:50%;
    justify-content: center;
    display: flex;
    flex-direction: row;
    align-items: center;
    border: 2px solid var(--blue);
  }
  
  /* On mouse-over, add a grey background color */
  .container:hover input ~ .checkmark {
    background-color: var(--grey-400);
  }
  
  /* When the checkbox is checked, add a blue background */
  .container input:checked ~ .checkmark {
    border: 2px solid var(--purple);
    background-color: var(--purple);
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    
    display: none;
  }
  
  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .container .checkmark:after {
   
    width: 4.5px;
    height: 9px;
    border: solid var(--grey-100);
    border-width: 0 1px 1px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }

  .trash button{
    all:unset;
    cursor: pointer;
  }

 